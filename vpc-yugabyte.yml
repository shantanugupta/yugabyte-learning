#https://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-stack.html
#aws cloudformation create-stack --stack-name myteststack --template-body file://sampletemplate.json --parameters ParameterKey=KeyPairName,ParameterValue=TestKey ParameterKey=SubnetIDs,ParameterValue=SubnetID1\\,SubnetID2

vpc-yugabyte:
  Type: AWS::EC2::VPC
  Properties:
    CidrBlock: 10.0.0.0/16
    EnableDnsSupport: true

inetgway-yugabyte:
  Type: AWS::EC2::InternetGateway

AttachGateway:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
    VpcId: !Ref vpc-yugabyte
    InternetGatewayId: !Ref inetgway-yugabyte

eip-yb:
  Type: AWS::EC2::EIP

# routeTableName:
#   Type: AWS::EC2::RouteTable
#   Properties:
#     VpcId: !Ref vpc-yugabyte

route-inetgway-to-vpc:
  Type: AWS::EC2::Route
  Properties:
    RouteTableId: rtable-id
    DestinationCidrBlock: 10.0.0.0/16
    GatewayId: !Ref inetgway-yugabyte

routeName:
  Type: AWS::EC2::Route
  Properties:
    RouteTableId: rtable-id
    DestinationCidrBlock: --.--.--.--/--
    GatewayId: gataway-id

#Subnets per AZ
snet-yg-aps1a:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: aps1-az1
    VpcId: !Ref vpc-yugabyte
    CidrBlock: 10.0.0.0/24

snet-yg-aps1b:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: aps1-az3
    VpcId: !Ref vpc-yugabyte
    CidrBlock: 10.0.1.0/24

snet-yg-aps1c:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: aps1-az2
    VpcId: !Ref vpc-yugabyte
    CidrBlock: 10.0.2.0/24

#Security Group - common for all
sg-tcp-icmp-all:
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupName: ec2-tcp-icmp-ssh
    GroupDescription: Allow SSH, ICMP over TCP
    VpcId: !Ref vpc-yugabyte
    SecurityGroupIngress:
      - IpProtocol: tcp
        Description: Allow SSH from the entire world
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        Description: Allow ICMP/ping from within VPC network
        FromPort: -1
        ToPort: -1
        CidrIp: 10.0.0.0/16
    SecurityGroupEgress:
      - IpProtocol: tcp
        Description: Allow all outbound
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

#Network interface cards
nworkIface-yg-1a:
  Type: AWS::EC2::NetworkInterface
  Properties:
    GroupSet:
      - !Ref sg-tcp-icmp-all
    SubnetId: !Ref snet-yg-aps1a

nworkIface-yg-1b:
  Type: AWS::EC2::NetworkInterface
  Properties:
    GroupSet:
      - !Ref sg-tcp-icmp-all
    SubnetId: !Ref snet-yg-aps1b

nworkIface-yg-1c:
  Type: AWS::EC2::NetworkInterface
  Properties:
    GroupSet:
      - !Ref sg-tcp-icmp-all
    SubnetId: !Ref snet-yg-aps1c        

#IAM - Permissions
iam-ec2-fullaccess:
  Type: AWS::IAM::Role
  Properties:
    Path:
    AssumeRolePolicyDocument: 
    Policies:
      - 
       PolicyName: "AmazonEC2FullAccess"
       PolicyDocument:
         Version: "2012-10-17"
         Statement:
            - Effect: "Allow"
                Prinicpal:
                  Service:
                    - ec2.amazonaws.com
              Action: "sts:AssumeRole"
              Resource: "*"

#EC2 Volumes
ec2Vol-aps1a-az1:
  Type: AWS::EC2::Volume
  Properties:
    AutoEnableIO: false
    AvailabilityZone: aps1-az1
    Encrypted: false
    Size: 8
    VolumeType: gp2

ec2Vol-aps1b-az3:
  Type: AWS::EC2::Volume
  Properties:
    AutoEnableIO: false
    AvailabilityZone: aps1-az3
    Encrypted: false
    Size: 8
    VolumeType: gp2

ec2Vol-aps1c-az2:
  Type: AWS::EC2::Volume
  Properties:
    AutoEnableIO: false
    AvailabilityZone: aps1-az2
    Encrypted: false
    Size: 8
    VolumeType: gp2        

#EC2 Instances
ec2-yg-1a:
  Type: AWS::EC2::Instance
  Properties:
    KeyName: shantanu.guptaAtLive
    ImageId: ami-026f33d38b6410e30
    InstanceType: t2.medium
    Monitoring: false
    SecurityGroupIds:
      - !Ref sg-tcp-icmp-all
    AvailabilityZone: aps1-az3
    PrivateIpAddress: 10.0.0.2
    SubnetId: !Ref snet-yg-aps1a
    NetworkInterfaces: 
      - !Ref nworkIface-yg-1a

ec2-yg-1b:
  Type: AWS::EC2::Instance
  Properties:
    KeyName: shantanu.guptaAtLive
    ImageId: ami-026f33d38b6410e30
    InstanceType: t2.medium
    Monitoring: false
    SecurityGroupIds:
      - !Ref sg-tcp-icmp-all
    AvailabilityZone: aps1-az1
    PrivateIpAddress: 10.0.1.2
    SubnetId: !Ref snet-yg-aps1a
    NetworkInterfaces: 
      - !Ref nworkIface-yg-1b

ec2-yg-1c:
  Type: AWS::EC2::Instance
  Properties:
    KeyName: shantanu.guptaAtLive
    ImageId: ami-026f33d38b6410e30
    InstanceType: t2.medium
    Monitoring: false
    SecurityGroupIds:
      - !Ref sg-tcp-icmp-all
    AvailabilityZone: aps1-az2
    PrivateIpAddress: 10.0.2.2
    SubnetId: !Ref snet-yg-aps1a
    NetworkInterfaces: 
      - !Ref nworkIface-yg-1c
